{"version":3,"sources":["container/LandingPage/LandingPage.module.css","components/BounceArrowAnimation/BounceAnimation.module.css","components/FlipTitle/FlipTitle.module.css","container/NavBar/NavBar.module.css","assets/images/landinpage.png","assets/images/teach.png","container/NavBar/NavBar.tsx","components/BounceArrowAnimation/BounceArrowAnimation.tsx","components/Letter/Letter.tsx","container/LandingPage/LandingPage.tsx","container/Events/Events.tsx","container/Footer/Footer.tsx","container/Team/Team.tsx","components/FlipTitle/FlipTitle.js","components/FlipTileList/FlipTileList.tsx","container/TechnologiesWeWillTeach/TechnologiesWeWillTeachar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","makeStyles","theme","root","backgroundColor","position","top","BounceArrowAnimation","className","css","arrow","bounce","Icon","style","color","Letter","letter","LandingPage","Grid","container","alignItems","paddingLeft","paddingRight","height","item","xs","sm","marginTop","classes","alignMentMediaQuery","fontSize","fontWeight","lineHeight","justify","flexContainer","src","landingPage","alt","width","Event","Footer","Team","FlipTitle","title","borderColor","useState","flipped","set","useSpring","opacity","transform","config","mass","tension","friction","imageLogo","display","flex","justifyContent","onMouseEnter","state","onMouseLeave","sate","onClick","div","willChange","interpolate","op","objectFit","cursor","t","textAlign","FlipTileList","list","spacing","map","listA","listB","TechWeTeach","paddingTop","paddingBottom","Hidden","mdDown","teach","App","Fragment","Events","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1ce7362.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexContainer\":\"LandingPage_flexContainer__qp0vB\",\"alignMentMediaQuery\":\"LandingPage_alignMentMediaQuery__mDIqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"BounceAnimation_arrow__2pg2P\",\"bounce\":\"BounceAnimation_bounce__LLQnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageLogo\":\"FlipTitle_imageLogo__1M0uZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationTiles\":\"NavBar_navigationTiles__2yL2W\"};","module.exports = __webpack_public_path__ + \"static/media/landinpage.e2ddf1c6.png\";","module.exports = __webpack_public_path__ + \"static/media/teach.9858f6aa.png\";","import React from \"react\";\nimport {AppBar, Grid, Toolbar, Button, Typography} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles';\nimport cssClasses from \"./NavBar.module.css\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"#fff\",\n        position: \"sticky\",\n        top: \"0\"\n    }\n}));\n\nfunction NavigationOptions() {\n    return (\n        <Grid container>\n            {\n                [\n                    \"Link 1\",\n                    \"Link 1\",\n                    \"Link 1\",\n                    \"Link 1\",\n                ].map((res, key) => (\n                    <Grid\n                        {...{key}}\n                        item\n                        xs={3}\n                        style={{textAlign: \"center\"}}\n                    >\n                        <p className={cssClasses.navigationTiles}>\n                            {res}\n                        </p>\n                    </Grid>\n                ))\n            }\n        </Grid>\n    )\n}\n\nexport default function NavBar() {\n    const classes = useStyles();\n    return (\n        <AppBar className={classes.root}>\n            <Toolbar>\n                <Grid container>\n                    <Grid\n                        item\n                        xs={3}\n                        style={{textAlign: \"center\"}}\n                    >\n                        logo\n                    </Grid>\n                    <Grid item xs={8}>\n                        <NavigationOptions/>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n};\n\n\n// here will be a bottom bar which on scroll would move along it and would then get fiexd at top, with change in background color!!\n// for phone,\n//         an animated toolbar would be present,\n//     a right corner sticky aspect which on clinck would bounce open as a full screen model\n","import React from \"react\"\nimport Icon from '@material-ui/core/Icon';\nimport css from \"./BounceAnimation.module.css\"\n\nexport default  function BounceArrowAnimation() {\n    return(\n        <div className={css.arrow && css.bounce}>\n            <Icon style={{color: \"#e1382b\"}}>keyboard_arrow_down</Icon>\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function Letter({letter, color}: { letter: string, color: string }) {\n    return (\n        <span style={{color}}>\n            {letter}\n        </span>\n    )\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport landingPage from \"../../assets/images/landinpage.png\"\nimport classes from \"./LandingPage.module.css\"\nimport BounceArrowAnimation from \"../../components/BounceArrowAnimation/BounceArrowAnimation\";\nimport Letter from '../../components/Letter/Letter'\n\n\nexport default function LandingPage() {\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            style={{\n                paddingLeft: \"10%\",\n                paddingRight: \"10%\",\n                height: \"100vh\"\n            }}\n        >\n            <Grid item xs={12} sm={6}>\n                <Grid container>\n                    <Grid item xs={12} style={{marginTop: 10}}>\n                        <div className={classes.alignMentMediaQuery}\n                             style={{fontSize: 20, fontWeight: \"bold\"}}>Developer Student Club\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} style={{marginTop: 10}}>\n                        <div className={classes.alignMentMediaQuery}\n                             style={{fontSize: 20, fontWeight: \"bold\"}}>Maharaja Aggrasen Institute Of Technology,\n                            GGSIPU\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div style={{marginTop: 10, lineHeight: 1.5, color: \"rgb(132, 150, 159)\"}}\n                             className={classes.alignMentMediaQuery}>\n                            Developer Student Clubs is a\n                            <b>\n                                <Letter letter=\" G\" color=\"#557DBF\"/>\n                                <Letter letter=\"o\" color=\"#E1382B\"/>\n                                <Letter letter=\"o\" color=\"#FBBC12\"/>\n                                <Letter letter=\"g\" color=\"#557DBF\"/>\n                                <Letter letter=\"l\" color=\"#189E59\"/>\n                                <Letter letter=\"e \" color=\"#E1382B\"/>\n                            </b>\n                            Developers program for university students to learn\n                            <Letter letter=\" mobile \" color=\"#E1382B\"/>\n                            and\n                            <Letter letter=\" web development \" color=\"#557DBF\"/> ,\n                            <Letter letter=\" design thinking \" color=\"#FBBC12\"/>\n                            and\n                            <Letter letter=\" leadership \" color=\"#189E59\"/> skills.\n\n                        </div>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={6} justify=\"center\" className={classes.flexContainer}>\n                <img src={landingPage} alt={\"landing page\"} style={{width: \"80%\", height: \"80%\"}}/>\n            </Grid>\n            <Grid item xs={12} className={classes.flexContainer}>\n                    <BounceArrowAnimation />\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\";\n\nconst Event: React.FC = () => {\n    return (\n        <div />\n    )\n};\nexport default Event\n","import React from \"react\";\n\nconst Footer: React.FC = () => {\n    return (\n        <div />\n    )\n};\nexport default Footer\n","import React from \"react\";\n\nconst Team: React.FC = () => {\n    return (\n        <div />\n    )\n};\nexport default Team\n","import React, {useState} from \"react\";\nimport {animated, useSpring} from \"react-spring\";\nimport css from \"./FlipTitle.module.css\"\n\nexport default function FlipTitle({title, borderColor, src}) {\n    const [flipped, set] = useState(false);\n    const {transform, opacity} = useSpring({\n        opacity: flipped ? 1 : 0,\n        transform: `rotateX(${flipped ? 180 : 0}deg)`,\n        config: {mass: 5, tension: 500, friction: 80}\n    });\n\n    return (\n\n        <div\n            className={css.imageLogo}\n            style={{display: \"flex\", flex: 1, justifyContent: \"center\"}}\n            onMouseEnter={() => set(state => true)}\n            onMouseLeave={() => set(sate => false)}\n            onClick={() => set(state => !flipped)}\n        >\n            <animated.div style={{\n                position: \"absolute\",\n                willChange: \"transform, opacity\",\n                opacity: opacity.interpolate(op => 1 - op),\n                transform\n            }}>\n                <img  {...{src}} alt={`${title} logo`}\n                      className={css.imageLogo}\n                      style={{objectFit: \"contain\", cursor: \"pointer\"}}/>\n            </animated.div>\n            <animated.div\n                style={{\n                    willChange: \"transform, opacity\",\n                    opacity,\n                    transform: transform.interpolate(t => `${t} rotateX(180deg)`),\n                    display: \"flex\", flex: 1, justifyContent: \"center\",\n                    alignItems: \"center\",\n                    color: borderColor,\n                    textAlign: \"center\"\n                }}>\n                {title}\n            </animated.div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport FlipTitle from \"../FlipTitle/FlipTitle\";\nimport Grid from \"@material-ui/core/Grid\";\n\ntype IList = {\n    title: string,\n    src: string,\n    borderColor: string\n}\n\ntype IFlipTileList = {\n    list: IList[]\n}\n\nexport default function FlipTileList({list}: IFlipTileList) {\n    return (\n        <Grid container spacing={3} style={{justifyContent: \"center\"}}>\n            {\n                list.map(({title, src, borderColor}: IList) => (\n                        <Grid item xs={6} sm={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n                            <FlipTitle {...{title, src, borderColor}} />\n                        </Grid>\n                    )\n                )\n            }\n        </Grid>\n    )\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\"\nimport FlipTileList from \"../../components/FlipTileList/FlipTileList\";\nimport teach from \"../../assets/images/teach.png\"\nimport {Hidden} from \"@material-ui/core\";\n\nconst listA = [\n    {\n        title: \"Web Development\",\n        borderColor: \"#3eccef\",\n        src: \"https://cdn4.iconfinder.com/data/icons/logos-3/600/React.js_logo-512.png\"\n    },\n    {\n        title: \"Machine Learning\",\n        borderColor: \"#FBBC12\",\n        src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/1024px-Python-logo-notext.svg.png\"\n    },\n    {\n        title: \"Android Development\",\n        borderColor: \"#557DBF\",\n        src: \"https://www.logospng.com/images/55/javacom-userlogosorg-55700.png\"\n    },\n];\nconst listB = [\n    {\n        title: \"Data Structure & Algo\",\n        borderColor: \"#189E59\",\n        src: \"https://www.logospng.com/images/55/javacom-userlogosorg-55700.png\"\n    },\n    {\n        title: \"Actions on Google\",\n        borderColor: \"#557DBF\",\n        src: \"https://developers.google.com/actions/assistant.png\"\n    },\n    {\n        title: \"Google Cloud Platform\",\n        borderColor: \"#E1382B\",\n        src: \"https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png\"\n    }\n];\n\n\nconst TechWeTeach: React.FC = () => (\n    <Grid container\n          style={{\n              paddingRight: \"10%\",\n              paddingLeft: \"10%\",\n              paddingTop: \"2.5%\",\n              paddingBottom: \"2.5%\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n          }}\n    >\n        <Grid item xs={12}>\n            <div style={{fontSize: 20, fontWeight: \"bold\", textAlign: \"center\", paddingBottom: \"1.5%\",}}>\n                Technologies We Will Teach\n            </div>\n        </Grid>\n        <Grid item xs={12}>\n            <Grid container style={{justifyContent: \"center\"}}>\n                <Grid item sm={3} xs={12} style={{justifyContent: \"center\", alignItems: \"center\", display: \"flex\"}}>\n                    <FlipTileList list={listA}/>\n                </Grid>\n                <Hidden mdDown>\n                    <Grid xs={12} sm={6} >\n                        <img style={{objectFit: \"contain\", width: \"100%\"}}\n                             src={teach} alt={\"teach\"}/>\n                    </Grid>\n                </Hidden>\n                <Grid item sm={3} xs={12} style={{justifyContent: \"center\", alignItems: \"center\", display: \"flex\"}}>\n                    <FlipTileList list={[...listB]}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n);\n// @ts-ignore\nexport default TechWeTeach;\n\n","import React from 'react';\nimport {\n    Events,\n    Footer,\n    NavBar,\n    LandingPage,\n    Team,\n    TechnologiesWeWillTeach\n} from \"./container\"\nimport Grid from \"@material-ui/core/Grid\";\n\nconst App: React.FC = () => {\n    return (\n        <React.Fragment>\n            <LandingPage/>\n            <TechnologiesWeWillTeach/>\n            <Events/>\n            <Team/>\n            <Footer/>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}